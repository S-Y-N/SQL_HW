CREATE TABLE Teachers (
ID int identity(1,1) not null primary key(ID),
Name nvarchar(max) not null check(Name !=''),
Surname nvarchar(max) not null check(Surname !='')

);
GO

CREATE TABLE Assistant (
ID int identity(1,1) not null primary key(ID),
TeacherID int not null Foreign key(TeacherID) References Teachers(ID)
);

GO

CREATE TABLE Curators(
ID int identity(1,1) not null primary key(ID),
TeacherID int not null foreign key(TeacherID) references Teachers(ID)
);

GO

CREATE TABLE Deans(
ID int identity(1,1) not null primary key(ID),
TeacherID int not null foreign key(TeacherID) references Teachers(ID)
);

GO

CREATE TABLE Heads (
ID int identity(1,1) not null primary key(ID),
TeacherID int not null foreign key (TeacherID) references Teachers(ID)
);
GO

CREATE TABLE Faculties (
ID int identity(1,1) not null primary key(ID),
Building int not null Check(Building >=1 AND Building <=5),
Name nvarchar(100) not null check(Name !='') unique,
DeanID int not null foreign key(DeanID) references Deans(ID)
);

GO


CREATE TABLE Departments (
ID int identity(1,1) not null primary key(ID),
Building INT not null check(Building >=1 AND Building <=5),
Name nvarchar(100) not null check(Name!='') unique,
FacultyID int not null foreign key (FacultyID) references Faculties(ID),
HeadID int not null foreign key(HeadID) references Heads(ID)
);

GO



CREATE TABLE Groups (
ID int identity(1,1) not null primary key(ID),
Name nvarchar(10) not null check(Name !='') unique,
Year int not null Check(Year >=1 AND Year <=5),
DepartmentID int not null foreign key(DepartmentID) references Departments(ID)
);

GO

CREATE TABLE GroupsCurators (
ID int identity(1,1) not null primary key(ID),
CuratorID int not null foreign key(CuratorID) references Curators(ID),
GroupID int not null foreign key(GroupID) references Groups(ID)
);

GO

CREATE TABLE Subjects(
ID int identity(1,1) not null primary key(ID),
Name nvarchar(100) not null check(Name !='') unique
);

GO

CREATE TABLE Lectures (
ID int identity(1,1) not null primary key(ID),
SubjectID int not null Foreign key(SubjectID) references Subjects(ID),
TeacherID int not null foreign key(TeacherID) references Teachers(ID)
);

GO

CREATE TABLE GroupsLectures(
ID int identity(1,1) not null  primary key(ID),
GroupID int not null foreign key(GroupID) references Groups(ID),
LectureID int not null foreign key(LectureID) references Lectures(ID)
);

GO

CREATE TABLE LecturesRooms(
ID int identity(1,1) not null primary key(ID),
Building int not null CHECK(Building >=1 AND Building <=5),
Name nvarchar(10) not null check(Name !='') unique
);

GO



CREATE TABLE Schedule (
ID int identity(1,1) not null primary key(ID),
Class int not null check(Class >=1 AND Class <=8),
DayOfWeek int not null Check(DayOfWeek >=1 AND DayOfWeek <=7),
Week int not null CHECK( Week >=1 AND Week <=52),
LectureID int not null foreign key(LectureID) references Lectures(ID),
LectureRoomID int not null foreign key(LectureRoomID) references LecturesRooms(ID)
);

GO




--24
INSERT INTO Teachers (Name, Surname) Values
('Alexander','Kovtun'),
('Valentin', 'Strikalo'),
('Bogdan', 'Stupka'),
('Maria','Solovey'),
('Trey','McGee'),
('Grisha','Semenov'),
('Sergey','Vorona'),
('Nina','Deletskaya'),
('Alexandra','Lavrinenko'),
('Andrey','Petruh'),
('Liudmyla','Protsenko'),
('Tatiana','Potushanska'),
('Valeriy','Moskalenko'),
('Volodimyr','Levchenko'),
('Natalia','Avraamenko'),
('Alex','Kompaniets'),
('Miron','Yanov'),
('Victor','Yanukovich'),
('Ana','Takadei'),
('Armen','Gaspariyan'),
('Pavel','Telepa'),
('Dima','Tkachenko'),
('Mark','Bernes'),
('Leonid','Bykob');
GO

INSERT INTO Assistant(TeacherID) VALUES
 (1), (3), (7), (13), (15), (20);

GO

INSERT INTO Curators (TeacherID) VALUES 
(2),(5),(8),(12),(17),(23);
GO

INSERT INTO Deans (TeacherID) VALUES
(4),(6),(9),(10),(11);
GO

INSERT INTO Heads(TeacherID) VALUES
(14),(16),(18),(21),(22);
GO

--5 Faculties
INSERT INTO Faculties (Building, Name, DeanID) VALUES
(1, 'Computer Science', 1),
(2,'Cybersecurity',2),
(3,' DataBase Engeneering',3),
(4,'Design',4),
(5,'Virtual Reality',5);

GO

--10 Departments
INSERT INTO Departments(Building, Name, FacultyID, HeadID) VALUES
(1,'Software Development',1,1),
(1,'Artificial Intelligence',1,1),
(2,'Security Propritary',2,2),
(2,'Malware Development',2,2),
(3,'DataBase Engineer',3,3),
(3,'DataBase Security',3,3),
(4,'Web design',4,4),
(4,'3D modeling',4,4),
(5,'Game VR Dev',5,5),
(5,'Soft VR Dev',5,5);

GO

INSERT INTO Groups (Name, Year, DepartmentID) VALUES
--30 Groups
('A101',5,1),
('A102',5,2),
('B101',4,3),
('B202',3,4),
('C203',2,5),
('C303',1,6),
('D103',5,7),
('D206',4,8),
('E942',3,9),
('E494',2,10),
('F101',5,1),
('F102',5,2),
('G101',4,3),
('G202',3,4),
('H203',2,5),
('H303',1,6),
('J103',5,7),
('J206',4,8),
('K942',3,9),
('K494',2,10),
('Q101',5,1),
('Q102',5,2),
('W101',4,3),
('W202',3,4),
('R203',2,5),
('R303',1,6),
('T103',5,7),
('T206',4,8),
('P942',3,9),
('P494',2,10);

GO
--17
INSERT INTO Subjects(Name) Values
('C'),
('C#'),
('PHP'),
('Java'),
('Python'),
('Swift'),
('Design'),
('HTML and CSS'),
('Photoshop'),
('3D MAX'),
('Blender 3d'),
('Theory Malware'),
('Socioengineering'),
('Database engineering'),
('Math Analisys'),
('High math'),
('Theory of Digit');

GO
--25
INSERT INTO LecturesRooms(Building, Name) Values
(1,'101'),(1,'102'),(1,'103'),(1,'104'),(1,'105'),
(2,'201'),(2,'202'),(2,'203'),(2,'204'),(2,'205'),
(3,'301'),(3,'302'),(3,'303'),(3,'304'),(3,'305'),
(4,'401'),(4,'402'),(4,'403'),(4,'404'),(4,'405'),
(5,'501'),(5,'502'),(5,'503'),(5,'504'),(5,'505');

GO
--24
INSERT INTO Lectures (SubjectID, TeacherID) Values
(1,1),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),
(8,8),(9,9),(10,10),(11,11),(12,12),(13,13),
(14,14),(15,15),(16,16),(17,17),
(1,18),(2,19),(3,20),(4,21),
(5,22),(6,23),(7,24);

GO

INSERT INTO Schedule(Class, DayOfWeek, Week, LectureID, LectureRoomID) Values
(1,1,1,1,1),(2,1,1,2,2),(3,1,1,3,3),(4,1,1,4,4),(5,1,1,5,5),
(1,2,1,5,6),(2,2,1,6,7),(3,1,1,6,6),(4,1,1,7,7),(5,1,1,8,8),
(1,3,1,9,9),(2,3,1,10,10),(3,3,1,11,11),(4,3,1,12,12),(5,3,1,13,13),
(1,4,1,14,14),(2,4,1,15,15),(3,4,1,16,16),(4,4,1,17,17),(5,4,1,18,18),
(1,5,1,19,19),(2,5,1,20,20),(3,5,1,21,21),(4,5,1,22,22),(5,5,1,23,23),
--2 week
(1,1,2,1,1),(2,1,2,2,2),(3,1,2,3,3),(4,1,2,4,4),(5,1,2,5,5),
(1,2,2,5,6),(2,2,2,6,7),(3,1,2,8,6),(4,1,2,7,7),(5,1,2,8,8),
(1,3,2,9,9),(2,3,2,10,10),(3,3,2,11,13),(4,3,2,12,12),(5,3,2,13,13),
(1,4,2,14,14),(2,4,2,15,15),(3,4,2,16,16),(4,4,2,16,17),(5,4,2,18,18),
(1,5,2,19,19),(2,5,2,20,20),(3,5,2,21,21),(4,5,2,22,22),(5,5,2,24,24);

GO

INSERT INTO GroupsCurators(GroupID, CuratorID) Values
(1,1),(2,2),(3,3),(4,4),(5,5),(6,6),
(7,1),(8,2),(9,3),(10,4),(11,5),(12,6),
(13,1),(14,2),(15,3),(16,4),(17,5),(18,6),
(19,1),(20,2),(21,3),(22,4),(23,5),(24,6),
(25,1),(26,2),(27,3),(28,4),(29,5),(30,6);

GO

INSERT INTO GroupsLectures(GroupID, LectureID) Values

(1,1),(2,2),(3,3),(4,4),(5,5),
(6,6),(7,7),(8,8),(9,9),(10,10),
(11,11),(12,12),(13,13),(14,14),(15,15),
(16,16),(17,17),(18,18),(19,19),(20,20),
(21,21),(22,22),(23,23),(24,24),(25,1),
(26,2),(27,3),(28,4),(29,5),(30,6);

GO